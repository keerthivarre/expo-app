{"version":3,"sources":["Screens/FillScreen.js","Screens/FirstScreen.js","App.js"],"names":["styles","StyleSheet","create","viewStyle","flex","margin","textAlignVertical","textStyle","fontSize","inputStyle","borderRadius","borderWidth","height","buttonStyle","listStyle","alignItems","FillScreen","name","age","onNameChange","onAgeChange","problem","onProblemChange","number","onNumberChange","startDate","onStartDateChange","time","onTimeChange","ScrollView","style","Text","TextInput","placeholder","value","onChangeText","keyboardType","keyboardAppearance","multiline","onChange","justifyContent","paddingVertical","paddingHorizontal","elevation","backgroundColor","FirstScreen","useState","setName","setAge","setProblem","setNumber","setStartDate","selected","setSelected","setTime","isAvailable","setIsAvailable","useEffect","isSmsAvailable","SMS","actualMessage","sendSms","sendWhatsapp","Linking","openURL","val","data","key","disabled","save","Button","title","onPress","navigator","createStackNavigator","Start","Fill","initialRouteName","defaultNavigationOptions","createAppContainer"],"mappings":"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","file":"static/js/app.70f25f52.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport {Text,TextInput,Button,StyleSheet,View,ScrollView} from 'react-native';\nimport InputScrollView from 'react-native-input-scroll-view';\nimport { withNavigation } from \"react-navigation\";\nimport {NavigationContainer} from '@react-navigation/native';\nimport FirstScreen from \"./FirstScreen\";\nimport { Icon } from 'react-native-elements';\nimport { SelectList } from 'react-native-dropdown-select-list';\nimport TimePicker from \"react-time-picker\";\n\n//import KeyboardAvoidingComponent from \"../components/KeyboardView\";\n//import {AutoGrowingTextInput} from 'react-native-autogrow-textinput';\n\nconst FillScreen=({name,age,onNameChange,onAgeChange,problem,onProblemChange,number,onNumberChange,startDate,onStartDateChange,time,onTimeChange})=>{\n    //const [selected, setSelected] = React.useState(\"\");\n    //KeyboardAvoidingComponent();\n    return (        \n        <ScrollView style={styles.viewStyle}>\n             <Text style = {styles.textStyle}>Enter mobile number</Text>\n             \n            <TextInput\n            style = {styles.inputStyle}\n            //KeyboardAvoidingComponent\n            placeholder=\"Enter mobile number\"\n            value={number}\n            onChangeText = {onNumberChange}/>\n\n           \n            <Text style = {styles.textStyle}>Enter Your name</Text>\n            <TextInput\n                style = {styles.inputStyle}\n                placeholder=\"Enter Your name\"\n                value={name}\n                onChangeText = {onNameChange}/>\n            <Text style = {styles.textStyle}>What is your Age</Text>\n            <TextInput\n                style = {styles.inputStyle}\n                placeholder=\"Enter your age\"\n                keyboardType='numeric'\n                keyboardAppearance='light'\n                value={age}\n                onChangeText={onAgeChange}/>\n            <Text style = {styles.textStyle}>Problem Detail</Text>\n            \n            <TextInput\n                multiline = {true}\n                style = {styles.inputStyle}\n                placeholder=\"Enter Your Problem\"\n                value={problem}\n                onChangeText = {onProblemChange}/>\n\n            <Text style={styles.textStyle}> Start Date</Text>\n            <TextInput\n                style = {styles.inputStyle}\n                placeholder=\"MM/DD/YY\"\n                keyboardType='numeric'\n                keyboardAppearance='light'\n                value={startDate}\n                onChangeText={onStartDateChange}/>\n            <Text style = {styles.textStyle}> Start Time </Text>\n            <TimePicker style= {styles.inputStyle} onChange = {onTimeChange} value = {time}/>\n            \n            \n            \n\n            \n\n            \n         {/*<Button style={styles.buttonStyle} title =\"Submit\" onPress = {()=> navigation.navigate('Start')}/>*/}\n\n        </ScrollView>\n        \n        \n    )\n    \n};\n\nconst styles= StyleSheet.create({\n    viewStyle:{\n        flex:1,\n        margin: 5,\n        textAlignVertical:true\n        \n       \n\n    },\n\n    textStyle: {\n        fontSize :18,\n        margin: 10\n\n    },\n\n    inputStyle :{\n        borderRadius :5,\n        borderWidth :1,\n        height:35,\n        margin :10\n    },\n    buttonStyle : {\n        \n        borderWidth :2,\n        height:35\n\n    },\n    listStyle :{\n        alignItems: \"center\"\n    }\n\n});\nexport default FillScreen;","import { useEffect, useState } from 'react';\nimport { Text,View,StyleSheet,Button,Linking,TextInput ,ScrollView} from 'react-native';\nimport * as SMS from 'expo-sms';\nimport FillScreen from './FillScreen';\nimport { SelectList } from 'react-native-dropdown-select-list'\nimport InputScrollView from 'react-native-input-scroll-view';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport TimePicker from \"react-time-picker\";\n//import { set } from 'react-native-reanimated';\n\n\nconst FirstScreen =()=>{\n\n    const[name,setName] = useState('');\n    const[age,setAge] = useState('');\n    const[problem,setProblem] = useState('');\n    const[number,setNumber] = useState('');\n    const[startDate,setStartDate] =useState('');\n    const [selected, setSelected] =useState('');\n    const [time,setTime] = useState('10:00');\n    \n   \n    const data = [\n        {key:'1', value:'cough', disabled:false},\n        {key:'2', value:'cold'},\n        {key:'3', value:'fever'},\n        {key:'4', value:'sore throat', disabled:false},\n        {key:'5', value:'diarrhea'},\n        {key:'6', value:'fatigue'},\n        {key:'7', value:'nausea'},\n    ]\n    const [isAvailable,setIsAvailable]= useState(false);\n    useEffect (async ()=>{\n        const isSmsAvailable = await SMS.isAvailableAsync();\n        setIsAvailable(isSmsAvailable);\n    },[]);\n    const actualMessage = name +age+ problem + selected + startDate + time;\n    const sendSms = async()=>{\n        await SMS.sendSMSAsync(\n            number,\n            actualMessage        \n         );\n    };\n    const sendWhatsapp = async()=>{\n        //Linking.openURL('whatsapp://send?text=' + actualMessage + '&phone=' + number);\n        Linking.openURL(\n            'http://api.whatsapp.com/send?text=' + actualMessage + '&phone=' + number);\n           \n        \n\n        \n    }\n\n    return(\n        <ScrollView>\n            <SelectList \n                 setSelected={(val) => setSelected(val)} \n                data={data} \n                save=\"value\"/>\n            <FillScreen\n                number = {number}\n                onNumberChange={setNumber}\n                name = {name}\n                onNameChange = {setName}\n                age ={age}\n                onAgeChange={setAge}\n                problem={problem}\n                onProblemChange = {setProblem}\n                startDate = {startDate}\n                onStartDateChange={setStartDate}\n                time= {time}\n                onTimeChange = {setTime}\n                />\n        {isAvailable ? <Button style={styles.buttonStyle} title= 'Send SMS' onPress={sendSms}/> :<Text>SMS not available</Text>}\n        <Button style ={styles.buttonStyle} title = \"send Whatsapp \" onPress ={sendWhatsapp} />\n\n        </ScrollView>\n    )\n\n};\n\nconst styles = StyleSheet.create({\n    buttonStyle: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        paddingVertical: 12,\n        paddingHorizontal: 32,\n        borderRadius: 4,\n        elevation: 3,\n        backgroundColor: 'green'\n     }\n});\n\nexport default FirstScreen;\n\n/*\n<TextInput \n            autoCapitalize = \"none\"\n            autoCorrect = {false}\n            placeholder = \"Enter Your Name\"\n            value={name}\n            onChangeText = {setName}\n            //onEndEditing = {onTermSubmit}\n             />\n             */ ","import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View } from 'react-native';\nimport  {createAppContainer} from 'react-navigation';\nimport {createStackNavigator} from 'react-navigation-stack';\nimport FirstScreen from './Screens/FirstScreen';\nimport FillScreen from './Screens/FillScreen';\n\n\nconst navigator = createStackNavigator({\n  // createstack navigator passing two arguments (key :value , initialroutename)\n  Start : FirstScreen,\n  Fill : FillScreen\n\n}, {\n    initialRouteName: 'Start',\n    defaultNavigationOptions :{\n      title : 'chat'\n    }\n});\n\nconst styles = StyleSheet.create({\n});\nexport default createAppContainer(navigator);\n"],"sourceRoot":""}